{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","topics","question","answer","fetchTopics","a","axios","get","process","data","setState","handleChange","event","target","value","handleSubmit","fetchAnswer","preventDefault","post","this","className","map","topic","onSubmit","type","onChange","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRAiEeA,E,4MA5DbC,MAAQ,CACNC,OAAQ,CAAC,cACTC,SAAU,GACVC,OAAQ,I,EAQVC,Y,sBAAc,gCAAAC,EAAA,sEACWC,IAAMC,IAAN,UAClBC,OADkB,gBADX,gBACJC,EADI,EACJA,KAGAR,EAAWQ,EAAXR,OACR,EAAKS,SAAS,CAACT,WALH,2C,EAQdU,aAAe,SAACC,GACd,EAAKF,SAAS,CAACR,SAAUU,EAAMC,OAAOC,S,EAGxCC,aAAe,SAACH,GACd,EAAKI,cACLJ,EAAMK,kB,EAGRD,Y,sBAAc,kCAAAX,EAAA,6DACJH,EAAa,EAAKF,MAAlBE,SADI,SAEWI,IAAMY,KAAN,UAClBV,OADkB,oBAC+B,CAAEN,aAH5C,gBAEJO,EAFI,EAEJA,KAGAN,EAAWM,EAAXN,OACR,EAAKO,SAAS,CAACP,WANH,2C,uDAtBd,WACEgB,KAAKf,gB,oBA8BP,WAAU,IAAD,EAC8Be,KAAKnB,MAAlCC,EADD,EACCA,OAAQC,EADT,EACSA,SAAUC,EADnB,EACmBA,OAC1B,OACE,qBAAKiB,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACA,qEACA,6BACGnB,EAAOoB,KAAI,SAAAC,GAAK,OAAK,6BAAiBA,GAARA,QAE/B,uBAAMC,SAAUJ,KAAKJ,aAArB,UACA,8CAEE,uBAAOS,KAAK,OAAOV,MAAOZ,EAAUuB,SAAUN,KAAKR,kBAErD,uBAAOa,KAAK,SAASV,MAAM,cAE7B,0CAAaX,c,GAtDHuB,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3282a995.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    topics: [\"Loading...\"],\n    question: \"\",\n    answer: \"\"\n  }\n\n  componentDidMount() {\n    this.fetchTopics()\n\n  }\n\n  fetchTopics = async () => {\n    const { data } = await axios.get(\n      `${process.env.REACT_APP_API_URL}/get_topics`,\n    );\n    const { topics } = data;\n    this.setState({topics})\n  }\n\n  handleChange = (event) => {\n    this.setState({question: event.target.value});\n  }\n\n  handleSubmit = (event) => {\n    this.fetchAnswer();\n    event.preventDefault();\n  }\n\n  fetchAnswer = async () => {\n    const { question } = this.state;\n    const { data } = await axios.post(\n      `${process.env.REACT_APP_API_URL}/submit_question`, { question }\n    );\n    const { answer } = data;\n    this.setState({answer})\n  }\n\n  render() {\n    const { topics, question, answer } = this.state;\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n        <h1>List of topics to ask a question on</h1>\n        <ul>\n          {topics.map(topic => (<li key={topic}>{topic}</li>))}\n        </ul>\n          <form onSubmit={this.handleSubmit}>\n          <label>\n            Question:\n            <input type=\"text\" value={question} onChange={this.handleChange} />\n          </label>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n        <h1>Answer: {answer}</h1>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// componentDidMount() {\n\n// }\n\n// import './Main.css';\n// import { connect } from 'react-redux';\n// import { Button } from '@blueprintjs/core';\n// import ParamInputs from '../ParamInputs/ParamInputs';\n// import ResultsGrid from '../ResultsGrid/ResultsGrid';\n// import actions from '../../state/actions';\n\n//   clickedAddCard = () => {\n//     const { addCard } = this.props;\n//     addCard();\n//   };\n\n//   render() {\n//     return (\n//       <>\n//         <div className=\"global-header\">\n//           <img\n//             className=\"logo\"\n//             alt=\"logo\"\n//             src=\"model_flow_horizontal.png\"\n//             height=\"30\"\n//           />\n//           <h3 className=\"bp3-heading titleText\">Mars Baseline Simulation</h3>\n//           <Button\n//             className=\"heading-button\"\n//             icon=\"add\"\n//             text=\"Add\"\n//             onClick={this.clickedAddCard}\n//           />\n//         </div>\n//         <div className=\"grid-container\">\n//           <div className=\"paramsCabinet\">\n//             <ParamInputs />\n//           </div>\n//           <div className=\"resultsDisplay\">\n//             <ResultsGrid />\n//           </div>\n//         </div>\n//       </>\n//     );\n//   }\n// }\n\n// const mapDispatchToProps = {\n//   addCard: actions.resultViews.addCard,\n// };\n\n// const mapStateToProps = (state) => ({});\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Main);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}